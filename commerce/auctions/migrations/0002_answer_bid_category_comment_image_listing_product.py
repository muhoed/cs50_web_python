# Generated by Django 3.1.7 on 2021-04-16 07:18

import auctions.models
import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('auctions', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name="category's title")),
                ('description', models.CharField(blank=True, max_length=255, verbose_name="category's description")),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name="product's title")),
                ('description', models.CharField(blank=True, max_length=1000, verbose_name="product's description")),
                ('categories', models.ManyToManyField(help_text='The product is included in the following categories', related_name='products', to='auctions.Category', verbose_name="product's category")),
                ('seller', models.ForeignKey(help_text='User who sells this product', on_delete=django.db.models.deletion.CASCADE, related_name='products', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Listing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_policy', models.TextField(default='The seller will send information about the payment to the winner within \t\t\t\t2 business days after the auction end. \n\t\t\t\tThe winner can initiate a dispute or cancel the order if information \t\t\t\trequired for payment was not received from the seller in due time. \n\t\t\t\tThe seller has a right to cancel the order if the payment was not \t\t\t\treceived in due\ttime, amount due or due order as requested. In this \t\t\t\tcase the seller shall return funds received after the term / not in \t\t\t\tdue order to the buyer within 3\tbusiness days after their receipt. The \t\t\t\tseller has a right to withdraw from the funds to be returned an amount \t\t\t\trequired to cover reasonable actual expenses related to the funds \t\t\t\treturn.')),
                ('shipment_policy', models.TextField(default="The product will be shipped to the auction winner within 5 business \t\t\t\tdays after the payment receipt. \n\t\t\t\tThe seller may request from the winner additional information \t\t\t\treasonably required for shipment. In this case the product will be \t\t\t\tshipped within 3 business days after receipt of the requested \t\t\t\tinformation.\n\t\t\t\tThe winner has a right to open a dispute and request funds' return in \t\t\t\tcase the product was not delivered to the winner within 45 days after \t\t\t\tthe payment.")),
                ('return_policy', models.TextField(default='Return is not accepted for this auction. The product is sold AS IS.')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('state', models.IntegerField(choices=[(0, 'Used'), (1, 'New')], default=0, verbose_name="product's condition")),
                ('start_price', models.DecimalField(decimal_places=2, default=1.0, help_text='Starting price for the listing in the whole Euros. Min. 1 EUR', max_digits=8)),
                ('start_time', models.DateTimeField(default=models.DateTimeField(auto_now_add=True))),
                ('duration', models.DurationField(default=datetime.timedelta(10), help_text='Duration of the listing in days. Default to 10 days.', verbose_name='duration of the listing')),
                ('_status', models.CharField(max_length=20)),
                ('followers', models.ManyToManyField(help_text='Users who add the listing in their watch lists.', related_name='watchlist', to=settings.AUTH_USER_MODEL, verbose_name='users following the listing')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='listings', to='auctions.product', verbose_name='product offered in the listing')),
            ],
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=auctions.models.get_product_image_filename, verbose_name="Product's image")),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auctions.product')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=1000, verbose_name="comment's text")),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='user placed the comment')),
                ('listing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auctions.listing', verbose_name='listing on which the comment was left')),
            ],
        ),
        migrations.CreateModel(
            name='Bid',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_value', models.DecimalField(decimal_places=2, help_text='Bid amount in Euro. Minimum step is 1 EUR.', max_digits=8, verbose_name='bid amount, EUR')),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('bidder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bids', to=settings.AUTH_USER_MODEL, verbose_name='user placed the bid')),
                ('listing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bids', to='auctions.listing', verbose_name='listing to which the bid was placed')),
            ],
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=1000, verbose_name="answer's text")),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auctions.comment', verbose_name='answered comment')),
                ('respondent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='user answered a comment to a listing, i.e. seller')),
            ],
        ),
    ]
